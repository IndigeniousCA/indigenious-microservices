version: '3.8'

services:
  chat-service:
    build: .
    container_name: indigenious-chat-service
    environment:
      - NODE_ENV=production
      - PORT=3008
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/chat
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - S3_BUCKET_NAME=indigenous-chat-files
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - ALLOWED_ORIGINS=https://indigenous.ca,https://app.indigenous.ca
    ports:
      - "3008:3008"
    depends_on:
      - postgres
      - redis
    networks:
      - indigenous-network
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads

  postgres:
    image: postgres:15-alpine
    container_name: chat-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=chat
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - indigenous-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: chat-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    networks:
      - indigenous-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  indigenous-network:
    driver: bridge