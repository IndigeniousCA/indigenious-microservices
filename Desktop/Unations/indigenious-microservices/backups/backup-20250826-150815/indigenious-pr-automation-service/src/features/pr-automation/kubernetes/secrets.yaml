# IMPORTANT: This is a template. Never commit actual secrets to version control!
# Use a secure secret management solution like Kubernetes Secrets, HashiCorp Vault, or AWS Secrets Manager

apiVersion: v1
kind: Secret
metadata:
  name: pr-automation-secrets
  namespace: indigenious
  labels:
    app: pr-automation
    component: secrets
type: Opaque
stringData:
  # Database connection
  database-url: "postgresql://pr_user:CHANGE_ME@postgres:5432/indigenious_pr?sslmode=require"
  
  # Redis connection
  redis-url: "redis://:CHANGE_ME@redis:6379/0"
  
  # JWT Keys (base64 encoded)
  jwt-private-key: |
    -----BEGIN RSA PRIVATE KEY-----
    CHANGE_ME_GENERATE_NEW_KEY
    -----END RSA PRIVATE KEY-----
  
  jwt-public-key: |
    -----BEGIN PUBLIC KEY-----
    CHANGE_ME_GENERATE_NEW_KEY
    -----END PUBLIC KEY-----
  
  # Encryption keys
  master-encryption-key: "CHANGE_ME_32_BYTE_BASE64_KEY"
  session-secret: "CHANGE_ME_32_BYTE_BASE64_KEY"
  audit-signing-key: |
    -----BEGIN RSA PRIVATE KEY-----
    CHANGE_ME_GENERATE_NEW_KEY
    -----END RSA PRIVATE KEY-----
  
  # API Keys (encrypted at rest)
  openai-api-key: "encrypted:CHANGE_ME"
  twitter-api-key: "encrypted:CHANGE_ME"
  linkedin-api-key: "encrypted:CHANGE_ME"
  abuseipdb-api-key: "encrypted:CHANGE_ME"
  
  # Monitoring passwords
  grafana-password: "CHANGE_ME_STRONG_PASSWORD"
  elastic-password: "CHANGE_ME_STRONG_PASSWORD"
  kibana-password: "CHANGE_ME_STRONG_PASSWORD"
---
apiVersion: v1
kind: Secret
metadata:
  name: pr-automation-tls
  namespace: indigenious
  labels:
    app: pr-automation
    component: tls
type: kubernetes.io/tls
data:
  # TLS certificate and key (base64 encoded)
  tls.crt: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNIQU5HRV9NRQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: |
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCkNIQU5HRV9NRQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pr-automation
  namespace: indigenious
  labels:
    app: pr-automation
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pr-automation
  namespace: indigenious
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
  resourceNames: ["pr-automation-secrets", "pr-automation-tls"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pr-automation
  namespace: indigenious
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pr-automation
subjects:
- kind: ServiceAccount
  name: pr-automation
  namespace: indigenious