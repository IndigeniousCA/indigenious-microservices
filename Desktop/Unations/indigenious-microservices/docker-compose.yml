version: '3.8'

services:
  # PostgreSQL Database - The Deep Roots
  postgres:
    image: postgres:15-alpine
    container_name: indigenous-postgres
    environment:
      POSTGRES_DB: indigenous_platform
      POSTGRES_USER: indigenous_admin
      POSTGRES_PASSWORD: sacred_forest_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U indigenous_admin"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - forest-network

  # Redis Cache - The Memory Pool
  redis:
    image: redis:7-alpine
    container_name: indigenous-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - forest-network

  # Frontend - The Forest Canopy (Next.js)
  frontend:
    build:
      context: ./indigenious-web-frontend
      dockerfile: Dockerfile
    container_name: indigenous-frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://gateway:3001
      NEXT_PUBLIC_DESIGN_SYSTEM_URL: http://design-system:3007
    depends_on:
      - gateway
      - design-system
    networks:
      - forest-network

  # API Gateway - The Forest Hub
  gateway:
    build:
      context: ./indigenious-gateway-service
      dockerfile: Dockerfile
    container_name: indigenous-gateway
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      REDIS_URL: redis://redis:6379
      DATABASE_URL: postgresql://indigenous_admin:sacred_forest_2024@postgres:5432/indigenous_platform
      JWT_SECRET: forest_secret_key_2024
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - forest-network

  # Design System Service - The Spirit
  design-system:
    build:
      context: ./indigenious-design-system-service
      dockerfile: Dockerfile
    container_name: indigenous-design-system
    ports:
      - "3007:3007"
    environment:
      NODE_ENV: production
      PORT: 3007
      DATABASE_URL: postgresql://indigenous_admin:sacred_forest_2024@postgres:5432/indigenous_platform
      REDIS_URL: redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - forest-network

  # Banking Service - River Flow
  banking:
    build:
      context: ./indigenious-banking-service
      dockerfile: Dockerfile
    container_name: indigenous-banking
    ports:
      - "3013:3013"
    environment:
      NODE_ENV: production
      PORT: 3013
      DATABASE_URL: postgresql://indigenous_admin:sacred_forest_2024@postgres:5432/indigenous_platform
      REDIS_URL: redis://redis:6379
      JWT_SECRET: forest_secret_key_2024
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - forest-network

  # User Service - Deep Roots
  user-service:
    build:
      context: ./indigenious-user-service
      dockerfile: Dockerfile
    container_name: indigenous-user-service
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      PORT: 3002
      DATABASE_URL: postgresql://indigenous_admin:sacred_forest_2024@postgres:5432/indigenous_platform
      REDIS_URL: redis://redis:6379
      JWT_SECRET: forest_secret_key_2024
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - forest-network

  # Business Service - Forest Trees
  business-service:
    build:
      context: ./indigenious-business-service
      dockerfile: Dockerfile
    container_name: indigenous-business-service
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: production
      PORT: 3003
      DATABASE_URL: postgresql://indigenous_admin:sacred_forest_2024@postgres:5432/indigenous_platform
      REDIS_URL: redis://redis:6379
      JWT_SECRET: forest_secret_key_2024
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - forest-network

  # RFQ Service - Flowing Rivers
  rfq-service:
    build:
      context: ./indigenious-rfq-service
      dockerfile: Dockerfile
    container_name: indigenous-rfq-service
    ports:
      - "3004:3004"
    environment:
      NODE_ENV: production
      PORT: 3004
      DATABASE_URL: postgresql://indigenous_admin:sacred_forest_2024@postgres:5432/indigenous_platform
      REDIS_URL: redis://redis:6379
      JWT_SECRET: forest_secret_key_2024
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - forest-network

  # Payment Service - Payment Rivers
  payment-service:
    build:
      context: ./indigenious-payment-service
      dockerfile: Dockerfile
    container_name: indigenous-payment-service
    ports:
      - "3005:3005"
    environment:
      NODE_ENV: production
      PORT: 3005
      DATABASE_URL: postgresql://indigenous_admin:sacred_forest_2024@postgres:5432/indigenous_platform
      REDIS_URL: redis://redis:6379
      JWT_SECRET: forest_secret_key_2024
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-sk_test_placeholder}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - forest-network

  # Notification Service - Wind Messages
  notification-service:
    build:
      context: ./indigenious-notification-service
      dockerfile: Dockerfile
    container_name: indigenous-notification-service
    ports:
      - "3006:3006"
    environment:
      NODE_ENV: production
      PORT: 3006
      DATABASE_URL: postgresql://indigenous_admin:sacred_forest_2024@postgres:5432/indigenous_platform
      REDIS_URL: redis://redis:6379
      JWT_SECRET: forest_secret_key_2024
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - forest-network

volumes:
  postgres_data:
    name: indigenous_postgres_data
  redis_data:
    name: indigenous_redis_data

networks:
  forest-network:
    name: indigenous-forest-network
    driver: bridge