version: '3.8'

services:
  analytics-service:
    build: .
    container_name: indigenious-analytics-service
    ports:
      - "3009:3009"
    environment:
      - NODE_ENV=production
      - PORT=3009
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/analytics_db
      - REDIS_URL=redis://redis:6379
      - CLICKHOUSE_URL=http://clickhouse:8123
      - KAFKA_BROKERS=kafka:9092
      - JWT_SECRET=${JWT_SECRET}
      - ML_MODEL_PATH=/app/models
      - ENABLE_KAFKA=${ENABLE_KAFKA:-true}
      - ENABLE_ML=${ENABLE_ML:-true}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
    depends_on:
      - postgres
      - redis
      - clickhouse
      - kafka
      - zookeeper
    networks:
      - indigenious-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models

  postgres:
    image: postgres:15-alpine
    container_name: analytics-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=analytics_db
    ports:
      - "5438:5432"
    volumes:
      - analytics-postgres-data:/var/lib/postgresql/data
    networks:
      - indigenious-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: analytics-redis
    ports:
      - "6388:6379"
    volumes:
      - analytics-redis-data:/data
    networks:
      - indigenious-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  clickhouse:
    image: clickhouse/clickhouse-server:23-alpine
    container_name: analytics-clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      - CLICKHOUSE_DB=analytics
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    volumes:
      - analytics-clickhouse-data:/var/lib/clickhouse
      - ./clickhouse/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - indigenious-network
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: analytics-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - indigenious-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: analytics-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - indigenious-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.1.0
    container_name: analytics-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clickhouse-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - indigenious-network
    restart: unless-stopped

volumes:
  analytics-postgres-data:
  analytics-redis-data:
  analytics-clickhouse-data:
  grafana-data:

networks:
  indigenious-network:
    driver: bridge