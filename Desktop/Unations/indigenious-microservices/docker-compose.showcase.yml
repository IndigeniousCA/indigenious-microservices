version: '3.8'

# Indigenous Platform Core Services Showcase
# This demonstrates the essential platform features

services:
  # ==========================================
  # SHARED INFRASTRUCTURE
  # ==========================================
  
  postgres:
    image: postgres:16-alpine
    container_name: indigenous-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: indigenous2024
      POSTGRES_MULTIPLE_DATABASES: indigenous_users,indigenous_business,indigenous_rfq,indigenous_payment,indigenous_design
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - indigenous-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: indigenous-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - indigenous-network
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================================
  # CORE SERVICES
  # ==========================================

  gateway:
    build: ./indigenious-gateway-service
    container_name: indigenous-gateway
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      REDIS_URL: redis://redis:6379
      JWT_SECRET: indigenous-secret-2024
      RATE_LIMIT_WINDOW: 60000
      RATE_LIMIT_MAX: 100
    depends_on:
      - redis
    networks:
      - indigenous-network
    labels:
      - "com.indigenous.service=gateway"
      - "com.indigenous.type=infrastructure"

  user-service:
    build: ./indigenious-user-service
    container_name: indigenous-user-service
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:indigenous2024@postgres:5432/indigenous_users
      REDIS_URL: redis://redis:6379
      JWT_SECRET: indigenous-secret-2024
    depends_on:
      - postgres
      - redis
    networks:
      - indigenous-network
    labels:
      - "com.indigenous.service=user"
      - "com.indigenous.type=core"

  business-service:
    build: ./indigenious-business-service
    container_name: indigenous-business-service
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      PORT: 3002
      DATABASE_URL: postgresql://postgres:indigenous2024@postgres:5432/indigenous_business
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - indigenous-network
    labels:
      - "com.indigenous.service=business"
      - "com.indigenous.type=core"

  rfq-service:
    build: ./indigenious-rfq-service
    container_name: indigenous-rfq-service
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: production
      PORT: 3003
      DATABASE_URL: postgresql://postgres:indigenous2024@postgres:5432/indigenous_rfq
      REDIS_URL: redis://redis:6379
      AI_MATCHING_ENABLED: "true"
    depends_on:
      - postgres
      - redis
    networks:
      - indigenous-network
    labels:
      - "com.indigenous.service=rfq"
      - "com.indigenous.type=marketplace"

  payment-service:
    build: ./indigenious-payment-service
    container_name: indigenous-payment-service
    ports:
      - "3004:3004"
    environment:
      NODE_ENV: production
      PORT: 3004
      DATABASE_URL: postgresql://postgres:indigenous2024@postgres:5432/indigenous_payment
      REDIS_URL: redis://redis:6379
      PAYMENT_PROCESSOR: stripe
    depends_on:
      - postgres
      - redis
    networks:
      - indigenous-network
    labels:
      - "com.indigenous.service=payment"
      - "com.indigenous.type=financial"

  design-system:
    build: ./indigenious-design-system-service
    container_name: indigenous-design-system
    ports:
      - "3049:3049"
    environment:
      NODE_ENV: production
      PORT: 3049
      DATABASE_URL: postgresql://postgres:indigenous2024@postgres:5432/indigenous_design
      REDIS_URL: redis://redis:6379
      PERFORMANCE_MODE: full-forest
      ENABLE_WEBSOCKETS: "true"
      PHILOSOPHY: "Where Economics Meets The Land"
    depends_on:
      - postgres
      - redis
    networks:
      - indigenous-network
    labels:
      - "com.indigenous.service=design-system"
      - "com.indigenous.type=ui"
      - "com.indigenous.elements=16"
      - "com.indigenous.layers=8"

  # ==========================================
  # MONITORING (Optional)
  # ==========================================

  portainer:
    image: portainer/portainer-ce:latest
    container_name: indigenous-portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - indigenous-network
    labels:
      - "com.indigenous.service=portainer"
      - "com.indigenous.type=monitoring"

networks:
  indigenous-network:
    driver: bridge
    name: indigenous-network

volumes:
  postgres-data:
  redis-data:
  portainer-data: